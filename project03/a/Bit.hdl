// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/a/Bit.hdl

/**
 * 1-bit register.
 * If load[t]=1 then out[t+1] = in[t]
 *              else out does not change (out[t+1]=out[t])
 */
//this is where it introduces one concept that isn't explained, how you can use the output from a previous cycle as an input
//dffOut just exists and maintains till the next cycle
CHIP Bit {
    IN in, load;
    OUT out;

    PARTS:
    // Put your code here.
    //dffOut is coming from the out of the DFF from a previous cycle. 
    Mux(a=dffOut, b=in, sel=load, out=muxOut);
    //the built in Data Flip Flop (that is created by using 2 Nand where the output of one is the input of the other creating a loop)
    //why does this thing have 2 outs? because you can fork an output to as many things as you want
    //its like creating variables on the fly. you could send out to dffOut1, dffOut2 to infinity
    //dffOut is the value fed back into the chip, out is just what gets spit out to the consumer
    DFF(in=muxOut, out=dffOut, out=out);
}
